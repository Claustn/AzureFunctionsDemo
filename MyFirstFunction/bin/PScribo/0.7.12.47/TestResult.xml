<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="380" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2016-08-01" time="22:46:04">
  <environment user="iainb" machine-name="OFFICEPC" cwd="C:\Users\iainb\Dropbox\PowerShell\Modules\PScribo" user-domain="OFFICEPC" platform="Microsoft Windows 10 Pro|C:\WINDOWS|\Device\Harddisk0\Partition4" nunit-version="2.5.8.0" os-version="10.0.14393" clr-version="4.0.30319.42000" />
  <culture-info current-culture="en-GB" current-uiculture="en-GB" />
  <test-suite type="Powershell" name="Pester" executed="True" result="Success" success="True" time="19.9066" asserts="0">
    <results>
      <test-suite type="TestFixture" name="OutHtml\OutHtml" executed="True" result="Success" success="True" time="0.8987" asserts="0" description="OutHtml\OutHtml">
        <results>
          <test-case description="calls OutHtmlSection" name="OutHtml\OutHtml.calls OutHtmlSection" time="0.289" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutHtmlParagraph" name="OutHtml\OutHtml.calls OutHtmlParagraph" time="0.0864" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutHtmlTable" name="OutHtml\OutHtml.calls OutHtmlTable" time="0.0881" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutHtmlLineBreak" name="OutHtml\OutHtml.calls OutHtmlLineBreak" time="0.0737" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutHtmlPageBreak" name="OutHtml\OutHtml.calls OutHtmlPageBreak" time="0.0818" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutHtmlTOC" name="OutHtml\OutHtml.calls OutHtmlTOC" time="0.0782" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutHtmlBlankLine" name="OutHtml\OutHtml.calls OutHtmlBlankLine" time="0.1027" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutHtmlBlankLine twice" name="OutHtml\OutHtml.calls OutHtmlBlankLine twice" time="0.0988" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutHtml.Internal\GetHtmlStyle" executed="True" result="Success" success="True" time="0.3978" asserts="0" description="OutHtml.Internal\GetHtmlStyle">
        <results>
          <test-case description="creates single font default style." name="OutHtml.Internal\GetHtmlStyle.creates single font default style." time="0.1165" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="uses invariant culture font size (#6)" name="OutHtml.Internal\GetHtmlStyle.uses invariant culture font size (#6)" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates multiple font default style." name="OutHtml.Internal\GetHtmlStyle.creates multiple font default style." time="0.022" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates single 12pt font." name="OutHtml.Internal\GetHtmlStyle.creates single 12pt font." time="0.0226" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates bold font style." name="OutHtml.Internal\GetHtmlStyle.creates bold font style." time="0.0227" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates center aligned font style." name="OutHtml.Internal\GetHtmlStyle.creates center aligned font style." time="0.017" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates right aligned font style." name="OutHtml.Internal\GetHtmlStyle.creates right aligned font style." time="0.0232" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates justified font style." name="OutHtml.Internal\GetHtmlStyle.creates justified font style." time="0.0241" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates underline font style." name="OutHtml.Internal\GetHtmlStyle.creates underline font style." time="0.0205" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates italic font style." name="OutHtml.Internal\GetHtmlStyle.creates italic font style." time="0.0211" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates colored font style." name="OutHtml.Internal\GetHtmlStyle.creates colored font style." time="0.023" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates colored font style with #." name="OutHtml.Internal\GetHtmlStyle.creates colored font style with #." time="0.0193" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates background colored font style." name="OutHtml.Internal\GetHtmlStyle.creates background colored font style." time="0.023" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates background colored font without #." name="OutHtml.Internal\GetHtmlStyle.creates background colored font without #." time="0.0256" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutHtml.Internal\GetHtmlTableStyle" executed="True" result="Success" success="True" time="0.327" asserts="0" description="OutHtml.Internal\GetHtmlTableStyle">
        <results>
          <test-case description="creates default table style." name="OutHtml.Internal\GetHtmlTableStyle.creates default table style." time="0.1288" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates custom table padding style of 5pt, 10pt, 5pt and 10pt." name="OutHtml.Internal\GetHtmlTableStyle.creates custom table padding style of 5pt, 10pt, 5pt and 10pt." time="0.0268" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates custom table border color style when -BorderWidth is specified." name="OutHtml.Internal\GetHtmlTableStyle.creates custom table border color style when -BorderWidth is specified." time="0.0411" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates custom table border width style of 3pt." name="OutHtml.Internal\GetHtmlTableStyle.creates custom table border width style of 3pt." time="0.0368" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates custom table border with no color style when no -BorderWidth specified." name="OutHtml.Internal\GetHtmlTableStyle.creates custom table border with no color style when no -BorderWidth specified." time="0.0186" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates custom table border color style." name="OutHtml.Internal\GetHtmlTableStyle.creates custom table border color style." time="0.0269" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="centers table." name="OutHtml.Internal\GetHtmlTableStyle.centers table." time="0.0239" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="aligns table to the right." name="OutHtml.Internal\GetHtmlTableStyle.aligns table to the right." time="0.0242" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutHtml.Internal\OutHtmlBlankLine" executed="True" result="Success" success="True" time="0.1032" asserts="0" description="OutHtml.Internal\OutHtmlBlankLine">
        <results>
          <test-case description="creates a single &lt;br /&gt; html tag." name="OutHtml.Internal\OutHtmlBlankLine.creates a single &lt;br /&gt; html tag." time="0.0879" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates two &lt;br /&gt; html tags." name="OutHtml.Internal\OutHtmlBlankLine.creates two &lt;br /&gt; html tags." time="0.0153" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutHtml.Internal\OutHtmlLineBreak" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="OutHtml.Internal\OutHtmlLineBreak">
        <results>
          <test-case description="creates a &lt;hr /&gt; html tag." name="OutHtml.Internal\OutHtmlLineBreak.creates a &lt;hr /&gt; html tag." time="0.0413" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutHtml.Internal\OutHtmlPageBreak" executed="True" result="Success" success="True" time="0.1715" asserts="0" description="OutHtml.Internal\OutHtmlPageBreak">
        <results>
          <test-case description="closes previous &lt;/page&gt; and &lt;/div&gt; tags." name="OutHtml.Internal\OutHtmlPageBreak.closes previous &lt;/page&gt; and &lt;/div&gt; tags." time="0.0877" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates new &lt;page&gt;." name="OutHtml.Internal\OutHtmlPageBreak.creates new &lt;page&gt;." time="0.0149" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets page class to default style" name="OutHtml.Internal\OutHtmlPageBreak.sets page class to default style" time="0.0194" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="includes page margins." name="OutHtml.Internal\OutHtmlPageBreak.includes page margins." time="0.0495" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutHtml.Internal\OutHtmlParagraph" executed="True" result="Success" success="True" time="0.2095" asserts="0" description="OutHtml.Internal\OutHtmlParagraph">
        <results>
          <test-case description="creates paragraph with no style and new line." name="OutHtml.Internal\OutHtmlParagraph.creates paragraph with no style and new line." time="0.132" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates paragraph with custom name/id" name="OutHtml.Internal\OutHtmlParagraph.creates paragraph with custom name/id" time="0.0232" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates paragraph with named -Style parameter." name="OutHtml.Internal\OutHtmlParagraph.creates paragraph with named -Style parameter." time="0.0255" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="encodes HTML paragraph content" name="OutHtml.Internal\OutHtmlParagraph.encodes HTML paragraph content" time="0.0289" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutHtml.Internal\OutHtmlSection" executed="True" result="Success" success="True" time="0.4925" asserts="0" description="OutHtml.Internal\OutHtmlSection">
        <results>
          <test-case description="calls OutHtmlParagraph" name="OutHtml.Internal\OutHtmlSection.calls OutHtmlParagraph" time="0.1333" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutHtmlParagraph twice" name="OutHtml.Internal\OutHtmlSection.calls OutHtmlParagraph twice" time="0.0475" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutHtmlTable" name="OutHtml.Internal\OutHtmlSection.calls OutHtmlTable" time="0.0786" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutHtmlPageBreak" name="OutHtml.Internal\OutHtmlSection.calls OutHtmlPageBreak" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutHtmlLineBreak" name="OutHtml.Internal\OutHtmlSection.calls OutHtmlLineBreak" time="0.0336" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutHtmlBlankLine" name="OutHtml.Internal\OutHtmlSection.calls OutHtmlBlankLine" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="warns on call OutHtmlTOC" name="OutHtml.Internal\OutHtmlSection.warns on call OutHtmlTOC" time="0.0357" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="encodes HTML section name" name="OutHtml.Internal\OutHtmlSection.encodes HTML section name" time="0.0308" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls nested OutXmlSection" name="OutHtml.Internal\OutHtmlSection.calls nested OutXmlSection" time="0.0483" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutHtml.Internal\OutHtmlStyle" executed="True" result="Success" success="True" time="0.2689" asserts="0" description="OutHtml.Internal\OutHtmlStyle">
        <results>
          <test-case description="creates &lt;style&gt; tag." name="OutHtml.Internal\OutHtmlStyle.creates &lt;style&gt; tag." time="0.1017" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates page layout style by default" name="OutHtml.Internal\OutHtmlStyle.creates page layout style by default" time="0.0874" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="suppresses page layout style when 'Options.NoPageLayoutSyle' specified" name="OutHtml.Internal\OutHtmlStyle.suppresses page layout style when 'Options.NoPageLayoutSyle' specified" time="0.0798" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutHtml.Internal\OutHtmlParagraphStyle" executed="True" result="Success" success="True" time="0.1049" asserts="0" description="OutHtml.Internal\OutHtmlParagraphStyle">
        <results>
          <test-case description="uses invariant culture paragraph size (#6)" name="OutHtml.Internal\OutHtmlParagraphStyle.uses invariant culture paragraph size (#6)" time="0.1049" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutHtml.Internal\OutHtmlTable" executed="True" result="Success" success="True" time="0.7926" asserts="0" description="OutHtml.Internal\OutHtmlTable">
        <results>
          <test-case description="creates default table class of tabledefault." name="OutHtml.Internal\OutHtmlTable.creates default table class of tabledefault." time="0.1398" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates table headings row." name="OutHtml.Internal\OutHtmlTable.creates table headings row." time="0.0893" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates column for each object property." name="OutHtml.Internal\OutHtmlTable.creates column for each object property." time="0.0937" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a row for each object." name="OutHtml.Internal\OutHtmlTable.creates a row for each object." time="0.0782" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates no table heading row." name="OutHtml.Internal\OutHtmlTable.creates no table heading row." time="0.106" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates default table class of tabledefault-list." name="OutHtml.Internal\OutHtmlTable.creates default table class of tabledefault-list." time="0.1319" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a two column table." name="OutHtml.Internal\OutHtmlTable.creates a two column table." time="0.0841" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a row for each object property." name="OutHtml.Internal\OutHtmlTable.creates a row for each object property." time="0.0695" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutText\OutText" executed="True" result="Success" success="True" time="0.7134" asserts="0" description="OutText\OutText">
        <results>
          <test-case description="calls OutTextSection" name="OutText\OutText.calls OutTextSection" time="0.202" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutTextParagraph" name="OutText\OutText.calls OutTextParagraph" time="0.0688" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutTextLineBreak" name="OutText\OutText.calls OutTextLineBreak" time="0.0661" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutTextPageBreak" name="OutText\OutText.calls OutTextPageBreak" time="0.0687" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutTextTable" name="OutText\OutText.calls OutTextTable" time="0.081" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutTextTOC" name="OutText\OutText.calls OutTextTOC" time="0.0758" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutTextBlankLine" name="OutText\OutText.calls OutTextBlankLine" time="0.0741" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutTextBlankLine twice" name="OutText\OutText.calls OutTextBlankLine twice" time="0.0769" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutText.Internal\OutTextBlankLine" executed="True" result="Success" success="True" time="0.0979" asserts="0" description="OutText.Internal\OutTextBlankLine">
        <results>
          <test-case description="Defaults to a single blank line." name="OutText.Internal\OutTextBlankLine.Defaults to a single blank line." time="0.0814" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Creates 3 blank lines." name="OutText.Internal\OutTextBlankLine.Creates 3 blank lines." time="0.0165" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutText.Internal\OutTextLineBreak" executed="True" result="Success" success="True" time="0.1229" asserts="0" description="OutText.Internal\OutTextLineBreak">
        <results>
          <test-case description="Defaults to 120 and includes new line." name="OutText.Internal\OutTextLineBreak.Defaults to 120 and includes new line." time="0.0783" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Truncates to 40 and includes new line." name="OutText.Internal\OutTextLineBreak.Truncates to 40 and includes new line." time="0.0253" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Wraps lines and includes new line" name="OutText.Internal\OutTextLineBreak.Wraps lines and includes new line" time="0.0194" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutText.Internal\OutTextPageBreak" executed="True" result="Success" success="True" time="0.1188" asserts="0" description="OutText.Internal\OutTextPageBreak">
        <results>
          <test-case description="Defaults to 120 and includes new line." name="OutText.Internal\OutTextPageBreak.Defaults to 120 and includes new line." time="0.0826" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Truncates to 40 and includes new line." name="OutText.Internal\OutTextPageBreak.Truncates to 40 and includes new line." time="0.0176" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Wraps lines and includes new line." name="OutText.Internal\OutTextPageBreak.Wraps lines and includes new line." time="0.0186" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutText.Internal\OutTextParagraph" executed="True" result="Success" success="True" time="0.2306" asserts="0" description="OutText.Internal\OutTextParagraph">
        <results>
          <test-case description="Paragraph with new line." name="OutText.Internal\OutTextParagraph.Paragraph with new line." time="0.0936" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Paragraph with no new line." name="OutText.Internal\OutTextParagraph.Paragraph with no new line." time="0.0216" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Paragraph wraps at 10 characters with new line." name="OutText.Internal\OutTextParagraph.Paragraph wraps at 10 characters with new line." time="0.019" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Paragraph wraps at 10 characters with no new line." name="OutText.Internal\OutTextParagraph.Paragraph wraps at 10 characters with no new line." time="0.0266" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="By named -Paragraph parameter with new line." name="OutText.Internal\OutTextParagraph.By named -Paragraph parameter with new line." time="0.047" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="By named -Paragraph parameter with no new line." name="OutText.Internal\OutTextParagraph.By named -Paragraph parameter with no new line." time="0.0227" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutText.Internal\OutTextSection" executed="True" result="Success" success="True" time="0.3226" asserts="0" description="OutText.Internal\OutTextSection">
        <results>
          <test-case description="calls OutTextParagraph" name="OutText.Internal\OutTextSection.calls OutTextParagraph" time="0.0973" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutTextParagraph twice" name="OutText.Internal\OutTextSection.calls OutTextParagraph twice" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutTextTable" name="OutText.Internal\OutTextSection.calls OutTextTable" time="0.041" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutTextPageBreak" name="OutText.Internal\OutTextSection.calls OutTextPageBreak" time="0.0297" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutTextLineBreak" name="OutText.Internal\OutTextSection.calls OutTextLineBreak" time="0.0311" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutTextBlankLine" name="OutText.Internal\OutTextSection.calls OutTextBlankLine" time="0.0345" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="warns on call OutTextTOC" name="OutText.Internal\OutTextSection.warns on call OutTextTOC" time="0.026" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls nested OutXmlSection" name="OutText.Internal\OutTextSection.calls nested OutXmlSection" time="0.0303" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutText.Internal\OutTextTable" executed="True" result="Success" success="True" time="0.2269" asserts="0" description="OutText.Internal\OutTextTable">
        <results>
          <test-case description="Default width of 120." name="OutText.Internal\OutTextTable.Default width of 120." time="0.124" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Set width with of 35." name="OutText.Internal\OutTextTable.Set width with of 35." time="0.0297" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Default width of 120." name="OutText.Internal\OutTextTable.Default width of 120." time="0.0552" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Default width of 25." name="OutText.Internal\OutTextTable.Default width of 25." time="0.018" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutText.Internal\OutTextTOC" executed="True" result="Success" success="True" time="0.2336" asserts="0" description="OutText.Internal\OutTextTOC">
        <results>
          <test-case description="outputs TOC name and section break" name="OutText.Internal\OutTextTOC.outputs TOC name and section break" time="0.1" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="adds section numbers when &quot;EnableSectionNumbering&quot; is enabled (#20)" name="OutText.Internal\OutTextTOC.adds section numbers when &quot;EnableSectionNumbering&quot; is enabled (#20)" time="0.0727" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="does not add section numbers when &quot;EnableSectionNumbering&quot; is disabled (#20)" name="OutText.Internal\OutTextTOC.does not add section numbers when &quot;EnableSectionNumbering&quot; is disabled (#20)" time="0.0609" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutWord.Internal\ConvertToWordColor" executed="True" result="Success" success="True" time="0.2009" asserts="0" description="OutWord.Internal\ConvertToWordColor">
        <results>
          <test-case description="converts to &quot;abcdef&quot; to &quot;ABCDEF&quot;" name="OutWord.Internal\ConvertToWordColor.converts to &quot;abcdef&quot; to &quot;ABCDEF&quot;" time="0.1375" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="converts &quot;#abcdef&quot; to &quot;ABCDEF&quot;" name="OutWord.Internal\ConvertToWordColor.converts &quot;#abcdef&quot; to &quot;ABCDEF&quot;" time="0.02" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="converts &quot;abc&quot; to &quot;AABBCC&quot;" name="OutWord.Internal\ConvertToWordColor.converts &quot;abc&quot; to &quot;AABBCC&quot;" time="0.0241" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="converts &quot;#abc&quot; to &quot;AABBCC&quot;" name="OutWord.Internal\ConvertToWordColor.converts &quot;#abc&quot; to &quot;AABBCC&quot;" time="0.0193" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutWord.Internal\OutWordSection" executed="True" result="Success" success="True" time="0.878" asserts="0" description="OutWord.Internal\OutWordSection">
        <results>
          <test-case description="appends section &quot;&lt;w:p&gt;[..]&lt;/w:p&gt;&quot;" name="OutWord.Internal\OutWordSection.appends section &quot;&lt;w:p&gt;[..]&lt;/w:p&gt;&quot;" time="0.0777" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="appends section spacing &quot;[..]&lt;w:pPr&gt;&lt;w:spacing w:before=&quot;160&quot; w:after=&quot;160&quot; /&gt;&lt;/w:pPr&gt;[..]&quot;" name="OutWord.Internal\OutWordSection.appends section spacing &quot;[..]&lt;w:pPr&gt;&lt;w:spacing w:before=&quot;160&quot; w:after=&quot;160&quot; /&gt;&lt;/w:pPr&gt;[..]&quot;" time="0.0594" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="appends section style &quot;[..]&lt;w:pStyle w:val=&quot;CustomStyle&quot; /&gt;[..]&quot;" name="OutWord.Internal\OutWordSection.appends section style &quot;[..]&lt;w:pStyle w:val=&quot;CustomStyle&quot; /&gt;[..]&quot;" time="0.0589" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="increases section spacing between section levels" name="OutWord.Internal\OutWordSection.increases section spacing between section levels" time="0.0644" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="appends &quot;[..]&lt;w:r&gt;&lt;w:t&gt;Section Run&lt;/w:t&gt;&lt;/w:r&gt;&lt;/w:p&gt;&quot; run" name="OutWord.Internal\OutWordSection.appends &quot;[..]&lt;w:r&gt;&lt;w:t&gt;Section Run&lt;/w:t&gt;&lt;/w:r&gt;&lt;/w:p&gt;&quot; run" time="0.0615" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="adds section numbering when enabled" name="OutWord.Internal\OutWordSection.adds section numbering when enabled" time="0.0614" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls &quot;OutWordParagraph&quot;" name="OutWord.Internal\OutWordSection.calls &quot;OutWordParagraph&quot;" time="0.0716" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls &quot;OutTextParagraph&quot; twice" name="OutWord.Internal\OutWordSection.calls &quot;OutTextParagraph&quot; twice" time="0.0694" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls &quot;OutWordTable&quot;" name="OutWord.Internal\OutWordSection.calls &quot;OutWordTable&quot;" time="0.0801" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls &quot;OutWordPageBreak&quot;" name="OutWord.Internal\OutWordSection.calls &quot;OutWordPageBreak&quot;" time="0.0686" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls &quot;OutWordLineBreak&quot;" name="OutWord.Internal\OutWordSection.calls &quot;OutWordLineBreak&quot;" time="0.0695" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls &quot;OutTextBlankLine&quot;" name="OutWord.Internal\OutWordSection.calls &quot;OutTextBlankLine&quot;" time="0.0684" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls nested &quot;OutWordSection&quot;" name="OutWord.Internal\OutWordSection.calls nested &quot;OutWordSection&quot;" time="0.0672" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutWord.Internal\OutWordParagraph" executed="True" result="Success" success="True" time="0.9284" asserts="0" description="OutWord.Internal\OutWordParagraph">
        <results>
          <test-case description="returns a &quot;System.Xml.XmlElement&quot; object type" name="OutWord.Internal\OutWordParagraph.returns a &quot;System.Xml.XmlElement&quot; object type" time="0.0852" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs paragraph &quot;&lt;w:p&gt;[..]&gt;&lt;/w:p&gt;&quot;" name="OutWord.Internal\OutWordParagraph.outputs paragraph &quot;&lt;w:p&gt;[..]&gt;&lt;/w:p&gt;&quot;" time="0.0577" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs paragraph properties &quot;&lt;w:p&gt;&lt;w:pPr&gt;[..]&gt;&lt;/w:pPr[..]&gt;&lt;/w:p&gt;&quot;" name="OutWord.Internal\OutWordParagraph.outputs paragraph properties &quot;&lt;w:p&gt;&lt;w:pPr&gt;[..]&gt;&lt;/w:pPr[..]&gt;&lt;/w:p&gt;&quot;" time="0.0572" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs indented paragraph &quot;&lt;w:p&gt;&lt;w:pPr&gt;&lt;w:ind w:left=&quot;1440&quot; /&gt;[..]&lt;/w:p&gt;&quot;" name="OutWord.Internal\OutWordParagraph.outputs indented paragraph &quot;&lt;w:p&gt;&lt;w:pPr&gt;&lt;w:ind w:left=&quot;1440&quot; /&gt;[..]&lt;/w:p&gt;&quot;" time="0.0581" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs paragraph style &quot;&lt;w:p&gt;&lt;w:pPr&gt;&lt;w:pStyle w:val=&quot;[..]&quot; /&gt;[..]&lt;/w:p&gt;&quot;" name="OutWord.Internal\OutWordParagraph.outputs paragraph style &quot;&lt;w:p&gt;&lt;w:pPr&gt;&lt;w:pStyle w:val=&quot;[..]&quot; /&gt;[..]&lt;/w:p&gt;&quot;" time="0.0687" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs run &quot;[..]&lt;w:r&gt;[..]&gt;&lt;/w:r&gt;[..]&quot;" name="OutWord.Internal\OutWordParagraph.outputs run &quot;[..]&lt;w:r&gt;[..]&gt;&lt;/w:r&gt;[..]&quot;" time="0.0629" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs empty run properties &quot;[..]&lt;w:r&gt;&lt;w:rPr /&gt;[..]&gt;&lt;/w:r&gt;[..]&quot;" name="OutWord.Internal\OutWordParagraph.outputs empty run properties &quot;[..]&lt;w:r&gt;&lt;w:rPr /&gt;[..]&gt;&lt;/w:r&gt;[..]&quot;" time="0.0636" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs run property font &quot;[..]&lt;w:rPr&gt;&lt;w:rFonts w:ascii=&quot;[..]&quot; w:hAnsi=&quot;[..]&quot; /&gt;&lt;/w:rPr&gt;[..]&quot;" name="OutWord.Internal\OutWordParagraph.outputs run property font &quot;[..]&lt;w:rPr&gt;&lt;w:rFonts w:ascii=&quot;[..]&quot; w:hAnsi=&quot;[..]&quot; /&gt;&lt;/w:rPr&gt;[..]&quot;" time="0.0657" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs run property font size &quot;[..]&lt;w:rPr&gt;&lt;w:sz w:val=&quot;[..]&quot; /&gt;&lt;/w:rPr&gt;[..]&quot;" name="OutWord.Internal\OutWordParagraph.outputs run property font size &quot;[..]&lt;w:rPr&gt;&lt;w:sz w:val=&quot;[..]&quot; /&gt;&lt;/w:rPr&gt;[..]&quot;" time="0.0567" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs run property bold &quot;[..]&lt;w:rPr&gt;&lt;w:b /&gt;&lt;/w:rPr&gt;[..]&quot;" name="OutWord.Internal\OutWordParagraph.outputs run property bold &quot;[..]&lt;w:rPr&gt;&lt;w:b /&gt;&lt;/w:rPr&gt;[..]&quot;" time="0.0581" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs run property italic &quot;[..]&lt;w:rPr&gt;&lt;w:i /&gt;&lt;/w:rPr&gt;[..]&quot;" name="OutWord.Internal\OutWordParagraph.outputs run property italic &quot;[..]&lt;w:rPr&gt;&lt;w:i /&gt;&lt;/w:rPr&gt;[..]&quot;" time="0.0551" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs run property underline &quot;[..]&lt;w:rPr&gt;&lt;w:u w:val=&quot;single&quot; /&gt;&lt;/w:rPr&gt;[..]&quot;" name="OutWord.Internal\OutWordParagraph.outputs run property underline &quot;[..]&lt;w:rPr&gt;&lt;w:u w:val=&quot;single&quot; /&gt;&lt;/w:rPr&gt;[..]&quot;" time="0.0656" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs run property colour &quot;[..]&lt;w:rPr&gt;&lt;w:color w:val=&quot;112233&quot; /&gt;&lt;/w:rPr&gt;[..]&quot;" name="OutWord.Internal\OutWordParagraph.outputs run property colour &quot;[..]&lt;w:rPr&gt;&lt;w:color w:val=&quot;112233&quot; /&gt;&lt;/w:rPr&gt;[..]&quot;" time="0.057" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs run text &quot;[..]&lt;w:r&gt;[..]&lt;w:t [..]&gt;{0}&lt;/w:t&gt;[..]&quot; using &quot;Name&quot; property" name="OutWord.Internal\OutWordParagraph.outputs run text &quot;[..]&lt;w:r&gt;[..]&lt;w:t [..]&gt;{0}&lt;/w:t&gt;[..]&quot; using &quot;Name&quot; property" time="0.0577" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs run text &quot;[..]&lt;w:r&gt;[..]&lt;w:t [..]&gt;{0}&lt;/w:t&gt;[..]&quot; using &quot;Text&quot; property" name="OutWord.Internal\OutWordParagraph.outputs run text &quot;[..]&lt;w:r&gt;[..]&lt;w:t [..]&gt;{0}&lt;/w:t&gt;[..]&quot; using &quot;Text&quot; property" time="0.059" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutWord.Internal\OutWordPageBreak" executed="True" result="Success" success="True" time="0.1357" asserts="0" description="OutWord.Internal\OutWordPageBreak">
        <results>
          <test-case description="returns a &quot;System.Xml.XmlElement&quot; object type" name="OutWord.Internal\OutWordPageBreak.returns a &quot;System.Xml.XmlElement&quot; object type" time="0.0748" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs &quot;&lt;w:p&gt;&lt;w:r&gt;&lt;w:br w:type=&quot;page&quot; /&gt;&lt;/w:r&gt;&lt;/w:p&gt;&quot;" name="OutWord.Internal\OutWordPageBreak.outputs &quot;&lt;w:p&gt;&lt;w:r&gt;&lt;w:br w:type=&quot;page&quot; /&gt;&lt;/w:r&gt;&lt;/w:p&gt;&quot;" time="0.0609" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutWord.Internal\OutWordLineBreak" executed="True" result="Success" success="True" time="0.1916" asserts="0" description="OutWord.Internal\OutWordLineBreak">
        <results>
          <test-case description="returns a &quot;System.Xml.XmlElement&quot; object type" name="OutWord.Internal\OutWordLineBreak.returns a &quot;System.Xml.XmlElement&quot; object type" time="0.0737" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs paragraph properties &quot;&lt;w:p&gt;&lt;w:pPr&gt;[..]&lt;/w:pPr&gt;&lt;/w:p&gt;&quot;" name="OutWord.Internal\OutWordLineBreak.outputs paragraph properties &quot;&lt;w:p&gt;&lt;w:pPr&gt;[..]&lt;/w:pPr&gt;&lt;/w:p&gt;&quot;" time="0.0596" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs border &quot;&lt;w:pBdr&gt;&lt;w:bottom w:val=&quot;single&quot; w:sz=&quot;6&quot; w:space=&quot;1&quot; w:color=&quot;auto&quot; /&gt;&lt;/w:pBdr&gt;&quot;" name="OutWord.Internal\OutWordLineBreak.outputs border &quot;&lt;w:pBdr&gt;&lt;w:bottom w:val=&quot;single&quot; w:sz=&quot;6&quot; w:space=&quot;1&quot; w:color=&quot;auto&quot; /&gt;&lt;/w:pBdr&gt;&quot;" time="0.0583" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutWord.Internal\OutWordTable" executed="True" result="Success" success="True" time="2.9765" asserts="0" description="OutWord.Internal\OutWordTable">
        <results>
          <test-case description="outputs List table border &quot;&lt;w:tblBorders&gt;[..]&lt;/w:tblBorders&gt;&quot;" name="OutWord.Internal\OutWordTable.outputs List table border &quot;&lt;w:tblBorders&gt;[..]&lt;/w:tblBorders&gt;&quot;" time="0.1778" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs List table border color" name="OutWord.Internal\OutWordTable.outputs List table border color" time="0.0899" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs List table cell spacing &quot;&lt;w:tblCellMar&gt;[..]&lt;/w:tblCellMar&gt;&quot;" name="OutWord.Internal\OutWordTable.outputs List table cell spacing &quot;&lt;w:tblCellMar&gt;[..]&lt;/w:tblCellMar&gt;&quot;" time="0.0831" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs List table spacing &quot;&lt;w:spacing w:before=&quot;72&quot; w:after=&quot;72&quot; /&gt;&quot;" name="OutWord.Internal\OutWordTable.outputs List table spacing &quot;&lt;w:spacing w:before=&quot;72&quot; w:after=&quot;72&quot; /&gt;&quot;" time="0.0723" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs Tabular table border &quot;&lt;w:tblBorders&gt;[..]&lt;/w:tblBorders&gt;&quot;" name="OutWord.Internal\OutWordTable.outputs Tabular table border &quot;&lt;w:tblBorders&gt;[..]&lt;/w:tblBorders&gt;&quot;" time="0.0886" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs Tabular table border color" name="OutWord.Internal\OutWordTable.outputs Tabular table border color" time="0.0956" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs Tabular table cell spacing &quot;&lt;w:tblCellMar&gt;[..]&lt;/w:tblCellMar&gt;&quot;" name="OutWord.Internal\OutWordTable.outputs Tabular table cell spacing &quot;&lt;w:tblCellMar&gt;[..]&lt;/w:tblCellMar&gt;&quot;" time="0.0944" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs Tabular table spacing &quot;&lt;w:spacing w:before=&quot;72&quot; w:after=&quot;72&quot; /&gt;&quot;" name="OutWord.Internal\OutWordTable.outputs Tabular table spacing &quot;&lt;w:spacing w:before=&quot;72&quot; w:after=&quot;72&quot; /&gt;&quot;" time="0.083" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs table per row &quot;(&lt;w:tbl&gt;[..]&lt;/w:tbl&gt;.*){3}&quot;" name="OutWord.Internal\OutWordTable.outputs table per row &quot;(&lt;w:tbl&gt;[..]&lt;/w:tbl&gt;.*){3}&quot;" time="0.1154" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs space between each table &quot;(&lt;w:p /&gt;.*){2}&quot;" name="OutWord.Internal\OutWordTable.outputs space between each table &quot;(&lt;w:p /&gt;.*){2}&quot;" time="0.0832" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs one row per object property &quot;(&lt;w:tr&gt;[..]&lt;/w:tr&gt;.*){3}&quot;" name="OutWord.Internal\OutWordTable.outputs one row per object property &quot;(&lt;w:tr&gt;[..]&lt;/w:tr&gt;.*){3}&quot;" time="0.0795" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs two cells per object property &quot;(&lt;w:tc&gt;[..]&lt;/w:tc&gt;.*){6}&quot;" name="OutWord.Internal\OutWordTable.outputs two cells per object property &quot;(&lt;w:tc&gt;[..]&lt;/w:tc&gt;.*){6}&quot;" time="0.0859" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs table cell percentage widths &quot;(&lt;w:tcW w:w=&quot;[..]&quot; w:type=&quot;pct&quot; /&gt;.*){6}" name="OutWord.Internal\OutWordTable.outputs table cell percentage widths &quot;(&lt;w:tcW w:w=&quot;[..]&quot; w:type=&quot;pct&quot; /&gt;.*){6}" time="0.0892" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs paragraph per table cell &quot;(&lt;w:p&gt;[..]&lt;/w:p&gt;.*){6}&quot;" name="OutWord.Internal\OutWordTable.outputs paragraph per table cell &quot;(&lt;w:p&gt;[..]&lt;/w:p&gt;.*){6}&quot;" time="0.0809" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs custom cell style &quot;(&lt;w:pPr&gt;&lt;w:pStyle w:val=&quot;{0}&quot; /&gt;&lt;/w:pPr&gt;){1}&quot;" name="OutWord.Internal\OutWordTable.outputs custom cell style &quot;(&lt;w:pPr&gt;&lt;w:pStyle w:val=&quot;{0}&quot; /&gt;&lt;/w:pPr&gt;){1}&quot;" time="0.0755" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs custom row style &quot;(&lt;w:pPr&gt;&lt;w:pStyle w:val=&quot;{0}&quot; /&gt;&lt;/w:pPr&gt;.*){2}&quot;" name="OutWord.Internal\OutWordTable.outputs custom row style &quot;(&lt;w:pPr&gt;&lt;w:pStyle w:val=&quot;{0}&quot; /&gt;&lt;/w:pPr&gt;.*){2}&quot;" time="0.0746" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="appends table &quot;&lt;w:tbl&gt;[..]&lt;/w:tbl&gt;&quot;" name="OutWord.Internal\OutWordTable.appends table &quot;&lt;w:tbl&gt;[..]&lt;/w:tbl&gt;&quot;" time="0.1045" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs table rows including header &quot;(&lt;w:tr&gt;[..]?&lt;/w:tr&gt;){4}&quot;" name="OutWord.Internal\OutWordTable.outputs table rows including header &quot;(&lt;w:tr&gt;[..]?&lt;/w:tr&gt;){4}&quot;" time="0.0746" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs table header &quot;&lt;w:tr&gt;&lt;w:trPr&gt;&lt;w:tblHeader /&gt;&quot;" name="OutWord.Internal\OutWordTable.outputs table header &quot;&lt;w:tr&gt;&lt;w:trPr&gt;&lt;w:tblHeader /&gt;&quot;" time="0.064" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs table borders &quot;&lt;w:tblGrid&gt;[..]&lt;/w:tblGrid&gt;&quot;" name="OutWord.Internal\OutWordTable.outputs table borders &quot;&lt;w:tblGrid&gt;[..]&lt;/w:tblGrid&gt;&quot;" time="0.0782" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs grid per column &quot;(&lt;w:gridCol /&gt;){2}&quot;" name="OutWord.Internal\OutWordTable.outputs grid per column &quot;(&lt;w:gridCol /&gt;){2}&quot;" time="0.072" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs table cell percentage widths &quot;(&lt;w:tcW w:w=&quot;[..]&quot; w:type=&quot;pct&quot; /&gt;.*){2}&quot;" name="OutWord.Internal\OutWordTable.outputs table cell percentage widths &quot;(&lt;w:tcW w:w=&quot;[..]&quot; w:type=&quot;pct&quot; /&gt;.*){2}&quot;" time="0.0701" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs custom cell style &quot;(&lt;w:pPr&gt;&lt;w:pStyle w:val=&quot;{0}&quot; /&gt;&lt;/w:pPr&gt;){1}&quot;" name="OutWord.Internal\OutWordTable.outputs custom cell style &quot;(&lt;w:pPr&gt;&lt;w:pStyle w:val=&quot;{0}&quot; /&gt;&lt;/w:pPr&gt;){1}&quot;" time="0.0778" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs custom row style &quot;(&lt;w:pPr&gt;&lt;w:pStyle w:val=&quot;{0}&quot; /&gt;&lt;/w:pPr&gt;.*){2}&quot;" name="OutWord.Internal\OutWordTable.outputs custom row style &quot;(&lt;w:pPr&gt;&lt;w:pStyle w:val=&quot;{0}&quot; /&gt;&lt;/w:pPr&gt;.*){2}&quot;" time="0.066" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs table cells per row &quot;(&lt;w:tc&gt;[..]?&lt;\/w:tc&gt;.*){8}&quot;" name="OutWord.Internal\OutWordTable.outputs table cells per row &quot;(&lt;w:tc&gt;[..]?&lt;\/w:tc&gt;.*){8}&quot;" time="0.0909" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs paragraph per table cell &quot;(&lt;w:p&gt;[..]&lt;/w:p&gt;.*){8}&quot;" name="OutWord.Internal\OutWordTable.outputs paragraph per table cell &quot;(&lt;w:p&gt;[..]&lt;/w:p&gt;.*){8}&quot;" time="0.1009" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs paragraph run style &quot;(&lt;w:p&gt;&lt;w:pPr&gt;&lt;w:pStyle w:val=&quot;[..]&quot; /&gt;&lt;/w:pPr&gt;[..]&lt;/w:p&gt;.*){8}&quot;" name="OutWord.Internal\OutWordTable.outputs paragraph run style &quot;(&lt;w:p&gt;&lt;w:pPr&gt;&lt;w:pStyle w:val=&quot;[..]&quot; /&gt;&lt;/w:pPr&gt;[..]&lt;/w:p&gt;.*){8}&quot;" time="0.1801" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs paragraph run per cell &quot;(&lt;w:p&gt;[..]&lt;w:r&gt;&lt;w:t&gt;[..]&lt;/w:t&gt;&lt;/w:r&gt;&lt;/w:p&gt;.*){8}&quot;" name="OutWord.Internal\OutWordTable.outputs paragraph run per cell &quot;(&lt;w:p&gt;[..]&lt;w:r&gt;&lt;w:t&gt;[..]&lt;/w:t&gt;&lt;/w:r&gt;&lt;/w:p&gt;.*){8}&quot;" time="0.1875" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs default table heading style &quot;(&lt;w:pStyle w:val=&quot;TableDefaultHeading&quot; /&gt;.*){2}&quot;" name="OutWord.Internal\OutWordTable.outputs default table heading style &quot;(&lt;w:pStyle w:val=&quot;TableDefaultHeading&quot; /&gt;.*){2}&quot;" time="0.071" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs custom table heading style &quot;(&lt;w:pStyle w:val=&quot;CustomStyle&quot; /&gt;.*){2}&quot;" name="OutWord.Internal\OutWordTable.outputs custom table heading style &quot;(&lt;w:pStyle w:val=&quot;CustomStyle&quot; /&gt;.*){2}&quot;" time="0.1168" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs default table row style &quot;(&lt;w:pStyle w:val=&quot;TableDefaultRow&quot; /&gt;.*){4}&quot;" name="OutWord.Internal\OutWordTable.outputs default table row style &quot;(&lt;w:pStyle w:val=&quot;TableDefaultRow&quot; /&gt;.*){4}&quot;" time="0.0783" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs alternate table row style &quot;(&lt;w:pStyle w:val=&quot;TableDefaultAltRow&quot; /&gt;.*){2}&quot;" name="OutWord.Internal\OutWordTable.outputs alternate table row style &quot;(&lt;w:pStyle w:val=&quot;TableDefaultAltRow&quot; /&gt;.*){2}&quot;" time="0.0751" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutWord.Internal\OutWordBlankLine" executed="True" result="Success" success="True" time="0.1472" asserts="0" description="OutWord.Internal\OutWordBlankLine">
        <results>
          <test-case description="appends paragraph &quot;&lt;w:p /&gt;&quot;" name="OutWord.Internal\OutWordBlankLine.appends paragraph &quot;&lt;w:p /&gt;&quot;" time="0.0849" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="appends paragraph &quot;&lt;w:p /&gt;&quot; per blankline" name="OutWord.Internal\OutWordBlankLine.appends paragraph &quot;&lt;w:p /&gt;&quot; per blankline" time="0.0623" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutXml\OutXml" executed="True" result="Success" success="True" time="0.3956" asserts="0" description="OutXml\OutXml">
        <results>
          <test-case description="calls OutXmlTable" name="OutXml\OutXml.calls OutXmlTable" time="0.254" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutXmlParagraph" name="OutXml\OutXml.calls OutXmlParagraph" time="0.0695" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutXmlSection" name="OutXml\OutXml.calls OutXmlSection" time="0.0721" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutXml.Internal\OutXmlParagraph" executed="True" result="Success" success="True" time="0.201" asserts="0" description="OutXml.Internal\OutXmlParagraph">
        <results>
          <test-case description="outputs a XmlComment with no Text" name="OutXml.Internal\OutXmlParagraph.outputs a XmlComment with no Text" time="0.0598" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs a XmlElement with a Name/Id" name="OutXml.Internal\OutXmlParagraph.outputs a XmlElement with a Name/Id" time="0.0239" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs a XmlElement with a Name/Id and Value" name="OutXml.Internal\OutXmlParagraph.outputs a XmlElement with a Name/Id and Value" time="0.0204" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs a XmlComment with no Text" name="OutXml.Internal\OutXmlParagraph.outputs a XmlComment with no Text" time="0.0487" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs a XmlElement with a Name/Id" name="OutXml.Internal\OutXmlParagraph.outputs a XmlElement with a Name/Id" time="0.0261" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs a XmlElement with a Name/Id and Value" name="OutXml.Internal\OutXmlParagraph.outputs a XmlElement with a Name/Id and Value" time="0.0221" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutXml.InternalOutXmlSection" executed="True" result="Success" success="True" time="0.124" asserts="0" description="OutXml.InternalOutXmlSection">
        <results>
          <test-case description="calls OutXmlTable" name="OutXml.InternalOutXmlSection.calls OutXmlTable" time="0.0743" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls OutXmlParagraph" name="OutXml.InternalOutXmlSection.calls OutXmlParagraph" time="0.0229" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls nested OutXmlSection" name="OutXml.InternalOutXmlSection.calls nested OutXmlSection" time="0.0268" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OutXml.InternalOutXmlTable" executed="True" result="Success" success="True" time="0.2795" asserts="0" description="OutXml.InternalOutXmlTable">
        <results>
          <test-case description="outputs a root XmlElement" name="OutXml.InternalOutXmlTable.outputs a root XmlElement" time="0.0647" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs a XmlElement for each table row" name="OutXml.InternalOutXmlTable.outputs a XmlElement for each table row" time="0.0243" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs a XmlElement for each table column" name="OutXml.InternalOutXmlTable.outputs a XmlElement for each table column" time="0.0264" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a name attribute when headers contain spaces" name="OutXml.InternalOutXmlTable.creates a name attribute when headers contain spaces" time="0.0287" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs a root XmlElement" name="OutXml.InternalOutXmlTable.outputs a root XmlElement" time="0.0516" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs a XmlElement for each table row" name="OutXml.InternalOutXmlTable.outputs a XmlElement for each table row" time="0.0244" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="outputs a XmlElement for each table column" name="OutXml.InternalOutXmlTable.outputs a XmlElement for each table column" time="0.025" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a name attribute when headers contain spaces" name="OutXml.InternalOutXmlTable.creates a name attribute when headers contain spaces" time="0.0345" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="BlankLine\BlankLine" executed="True" result="Success" success="True" time="0.2558" asserts="0" description="BlankLine\BlankLine">
        <results>
          <test-case description="returns a PSCustomObject object." name="BlankLine\BlankLine.returns a PSCustomObject object." time="0.1856" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a PScribo.BlankLine type." name="BlankLine\BlankLine.creates a PScribo.BlankLine type." time="0.0259" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates blank line with no parameters." name="BlankLine\BlankLine.creates blank line with no parameters." time="0.0191" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates blank line by named -Count parameter." name="BlankLine\BlankLine.creates blank line by named -Count parameter." time="0.0252" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Document\Document" executed="True" result="Success" success="True" time="0.6787" asserts="0" description="Document\Document">
        <results>
          <test-case description="returns a PSCustomObject object." name="Document\Document.returns a PSCustomObject object." time="0.2157" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a PScribo.Document type." name="Document\Document.creates a PScribo.Document type." time="0.0794" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a Document by named -Name parameter." name="Document\Document.creates a Document by named -Name parameter." time="0.0477" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="default Document.Options type should be hashtable." name="Document\Document.default Document.Options type should be hashtable." time="0.0496" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="default Document.Styles type should be hashtable." name="Document\Document.default Document.Styles type should be hashtable." time="0.0533" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="default Document.Style should be named &quot;Normal&quot;." name="Document\Document.default Document.Style should be named &quot;Normal&quot;." time="0.0551" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="default Document.TableStyle should be named &quot;TableDefault&quot;." name="Document\Document.default Document.TableStyle should be named &quot;TableDefault&quot;." time="0.0597" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a Document by positional -Name and -ScriptBlock parameters." name="Document\Document.creates a Document by positional -Name and -ScriptBlock parameters." time="0.0596" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a concatenated document Id by positional -Name and -ScriptBLock parameters." name="Document\Document.creates a concatenated document Id by positional -Name and -ScriptBLock parameters." time="0.0586" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Export-Document\Export-Document" executed="True" result="Success" success="True" time="0.4795" asserts="0" description="Export-Document\Export-Document">
        <results>
          <test-case description="calls single output formatter." name="Export-Document\Export-Document.calls single output formatter." time="0.1989" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls multiple output formatters." name="Export-Document\Export-Document.calls multiple output formatters." time="0.0326" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="throws on invalid qualified directory path." name="Export-Document\Export-Document.throws on invalid qualified directory path." time="0.0217" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="does not throw on valid qualified path." name="Export-Document\Export-Document.does not throw on valid qualified path." time="0.028" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="throws on invalid relative directory path." name="Export-Document\Export-Document.throws on invalid relative directory path." time="0.02" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="does not throw on valid relative path." name="Export-Document\Export-Document.does not throw on valid relative path." time="0.0272" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls single output formatter." name="Export-Document\Export-Document.calls single output formatter." time="0.0228" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="calls multiple output formatters." name="Export-Document\Export-Document.calls multiple output formatters." time="0.0304" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="throws on invalid qualified directory path." name="Export-Document\Export-Document.throws on invalid qualified directory path." time="0.0224" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="does not throw on valid qualified path." name="Export-Document\Export-Document.does not throw on valid qualified path." time="0.0281" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="throws on invalid relative directory path." name="Export-Document\Export-Document.throws on invalid relative directory path." time="0.0232" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="does not throw on valid relative path." name="Export-Document\Export-Document.does not throw on valid relative path." time="0.0242" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="GlobalOption\GlobalOption" executed="True" result="Success" success="True" time="0.5274" asserts="0" description="GlobalOption\GlobalOption">
        <results>
          <test-case description="sets default space separator to &quot;&quot;." name="GlobalOption\GlobalOption.sets default space separator to &quot;&quot;." time="0.1785" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="defaults to 25.4mm (1 inch) margin." name="GlobalOption\GlobalOption.defaults to 25.4mm (1 inch) margin." time="0.0345" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="defaults to &quot;Calibri&quot;,&quot;Candara&quot;,&quot;Segoe&quot;,&quot;Segoe UI&quot;,&quot;Optima&quot;,&quot;Arial&quot;,&quot;Sans-Serif&quot; fonts" name="GlobalOption\GlobalOption.defaults to &quot;Calibri&quot;,&quot;Candara&quot;,&quot;Segoe&quot;,&quot;Segoe UI&quot;,&quot;Optima&quot;,&quot;Arial&quot;,&quot;Sans-Serif&quot; fonts" time="0.0248" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="defaults to A4 page size." name="GlobalOption\GlobalOption.defaults to A4 page size." time="0.0286" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets custom space separator to &quot;_&quot;." name="GlobalOption\GlobalOption.sets custom space separator to &quot;_&quot;." time="0.0275" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets uppercase header flag." name="GlobalOption\GlobalOption.sets uppercase header flag." time="0.0298" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets uppercase section flag." name="GlobalOption\GlobalOption.sets uppercase section flag." time="0.0282" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets section numbering flag." name="GlobalOption\GlobalOption.sets section numbering flag." time="0.0328" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets page size to US Letter." name="GlobalOption\GlobalOption.sets page size to US Letter." time="0.0283" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets page size to US Legal" name="GlobalOption\GlobalOption.sets page size to US Legal" time="0.028" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets page orientation to US Legal Portrait" name="GlobalOption\GlobalOption.sets page orientation to US Legal Portrait" time="0.0279" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets page orientation to US Legal Landscape" name="GlobalOption\GlobalOption.sets page orientation to US Legal Landscape" time="0.0288" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets page margin to 1/2 inch using 36pt." name="GlobalOption\GlobalOption.sets page margin to 1/2 inch using 36pt." time="0.0297" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="LineBreak\LineBreak" executed="True" result="Success" success="True" time="0.2624" asserts="0" description="LineBreak\LineBreak">
        <results>
          <test-case description="returns a PSCustomObject object." name="LineBreak\LineBreak.returns a PSCustomObject object." time="0.1764" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a PScribo.LineBreak type." name="LineBreak\LineBreak.creates a PScribo.LineBreak type." time="0.0216" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates line break with no parameters." name="LineBreak\LineBreak.creates line break with no parameters." time="0.0217" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates line break by named -Id parameter." name="LineBreak\LineBreak.creates line break by named -Id parameter." time="0.0205" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates line break by positional -Id parameter." name="LineBreak\LineBreak.creates line break by positional -Id parameter." time="0.0221" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="PageBreak\PageBreak" executed="True" result="Success" success="True" time="0.2516" asserts="0" description="PageBreak\PageBreak">
        <results>
          <test-case description="returns a PSCustomObject object." name="PageBreak\PageBreak.returns a PSCustomObject object." time="0.169" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a PScribo.PageBreak type." name="PageBreak\PageBreak.creates a PScribo.PageBreak type." time="0.0191" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates page break with no parameters." name="PageBreak\PageBreak.creates page break with no parameters." time="0.0183" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates page break by named -Id parameter." name="PageBreak\PageBreak.creates page break by named -Id parameter." time="0.0211" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates page break by positional -Id parameter." name="PageBreak\PageBreak.creates page break by positional -Id parameter." time="0.0242" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Paragraph\Paragraph" executed="True" result="Success" success="True" time="0.625" asserts="0" description="Paragraph\Paragraph">
        <results>
          <test-case description="returns a PSCustomObject object." name="Paragraph\Paragraph.returns a PSCustomObject object." time="0.1827" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a PScribo.Paragraph type." name="Paragraph\Paragraph.creates a PScribo.Paragraph type." time="0.0191" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates paragraph by named -Name parameter." name="Paragraph\Paragraph.creates paragraph by named -Name parameter." time="0.0211" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates paragraph by named -Name and -Text parameters." name="Paragraph\Paragraph.creates paragraph by named -Name and -Text parameters." time="0.0247" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates paragraph by named -Name, -Text and -Style parameters." name="Paragraph\Paragraph.creates paragraph by named -Name, -Text and -Style parameters." time="0.0268" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates paragraph by named -Name, -Text and -Value parameters." name="Paragraph\Paragraph.creates paragraph by named -Name, -Text and -Value parameters." time="0.0206" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates paragraph by named -Name, -Text, -Value and -Style parameters." name="Paragraph\Paragraph.creates paragraph by named -Name, -Text, -Value and -Style parameters." time="0.028" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a paragraph with custom Bold formatting" name="Paragraph\Paragraph.creates a paragraph with custom Bold formatting" time="0.0208" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a paragraph with custom Italic formatting" name="Paragraph\Paragraph.creates a paragraph with custom Italic formatting" time="0.024" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a paragraph with custom Underline formatting" name="Paragraph\Paragraph.creates a paragraph with custom Underline formatting" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a paragraph with custom Size formatting" name="Paragraph\Paragraph.creates a paragraph with custom Size formatting" time="0.0249" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a paragraph with custom Color formatting" name="Paragraph\Paragraph.creates a paragraph with custom Color formatting" time="0.018" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a paragraph with custom Font formatting" name="Paragraph\Paragraph.creates a paragraph with custom Font formatting" time="0.0178" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a paragraph with custom Font[] formatting" name="Paragraph\Paragraph.creates a paragraph with custom Font[] formatting" time="0.0223" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates paragraph by positional -Name parameter." name="Paragraph\Paragraph.creates paragraph by positional -Name parameter." time="0.0856" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates paragraph by positional -Name and -Text parameters." name="Paragraph\Paragraph.creates paragraph by positional -Name and -Text parameters." time="0.0167" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates paragraph by positional -Name, -Text and -Value parameters." name="Paragraph\Paragraph.creates paragraph by positional -Name, -Text and -Value parameters." time="0.0276" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates paragraph by positional -Name, -Text and -Value and named -Style parameters." name="Paragraph\Paragraph.creates paragraph by positional -Name, -Text and -Value and named -Style parameters." time="0.0277" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Section\Section" executed="True" result="Success" success="True" time="0.5155" asserts="0" description="Section\Section">
        <results>
          <test-case description="calls a nested element." name="Section\Section.calls a nested element." time="0.204" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="returns a PSCustomObject object." name="Section\Section.returns a PSCustomObject object." time="0.0194" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates an array list of sections." name="Section\Section.creates an array list of sections." time="0.0234" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates an empty array list of sections." name="Section\Section.creates an empty array list of sections." time="0.0253" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a concatenated section Id." name="Section\Section.creates a concatenated section Id." time="0.0275" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a section by named -Name and -ScriptBlock parameters." name="Section\Section.creates a section by named -Name and -ScriptBlock parameters." time="0.0219" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a section by named -Name, -Style and -ScriptBlock parameters." name="Section\Section.creates a section by named -Name, -Style and -ScriptBlock parameters." time="0.0199" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a section by named -ExcludeFromTOC and -ScriptBlock parameters." name="Section\Section.creates a section by named -ExcludeFromTOC and -ScriptBlock parameters." time="0.0278" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a section by named -Name, -ExcludeFromTOC and -ScriptBlock parameters." name="Section\Section.creates a section by named -Name, -ExcludeFromTOC and -ScriptBlock parameters." time="0.0212" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a section by positional -Name and -ScriptBlock parameters." name="Section\Section.creates a section by positional -Name and -ScriptBlock parameters." time="0.0528" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a section by positional -Name and -ScriptBlock parameters and named -Style parameter." name="Section\Section.creates a section by positional -Name and -ScriptBlock parameters and named -Style parameter." time="0.024" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a section by positional -Name and -ScriptBlock parameters and named -ExcludeFromTOC parameter." name="Section\Section.creates a section by positional -Name and -ScriptBlock parameters and named -ExcludeFromTOC parameter." time="0.0231" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a section by positional -Name and -ScriptBlock parameters and named -Style and -ExcludeFromTOC parameter." name="Section\Section.creates a section by positional -Name and -ScriptBlock parameters and named -Style and -ExcludeFromTOC parameter." time="0.025" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Style\Style" executed="True" result="Success" success="True" time="0.7747" asserts="0" description="Style\Style">
        <results>
          <test-case description="sets style using named -Id and -Font parameters." name="Style\Style.sets style using named -Id and -Font parameters." time="0.1923" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets style font size by named -Size parameter." name="Style\Style.sets style font size by named -Size parameter." time="0.0223" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets style color to white (ffffff) by named -Color parameter." name="Style\Style.sets style color to white (ffffff) by named -Color parameter." time="0.0211" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets style color to red (ff0000) by named -Colour parameter." name="Style\Style.sets style color to red (ff0000) by named -Colour parameter." time="0.025" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets style background color to blue (0000ff) by named -Color parameter." name="Style\Style.sets style background color to blue (0000ff) by named -Color parameter." time="0.0223" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets style background color to green (00ff00) by named -Colour parameter." name="Style\Style.sets style background color to green (00ff00) by named -Colour parameter." time="0.0228" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets style font to bold." name="Style\Style.sets style font to bold." time="0.0237" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets style font to italic." name="Style\Style.sets style font to italic." time="0.0237" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets style font to underline." name="Style\Style.sets style font to underline." time="0.0275" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets text alignment to center." name="Style\Style.sets text alignment to center." time="0.0202" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets text alignment to right." name="Style\Style.sets text alignment to right." time="0.0272" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets text alignment to justified." name="Style\Style.sets text alignment to justified." time="0.026" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets default style to &quot;Normal&quot;." name="Style\Style.sets default style to &quot;Normal&quot;." time="0.0208" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="test case insensitive style names/Ids." name="Style\Style.test case insensitive style names/Ids." time="0.0252" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets style using positional -Id and -Font parameters." name="Style\Style.sets style using positional -Id and -Font parameters." time="0.0524" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="set style font size by positional -Size parameter." name="Style\Style.set style font size by positional -Size parameter." time="0.0208" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="defaults style colour to black by color name." name="Style\Style.defaults style colour to black by color name." time="0.0265" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="defaults background colour to null." name="Style\Style.defaults background colour to null." time="0.0246" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="defaults text alignment to left." name="Style\Style.defaults text alignment to left." time="0.0173" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="tests total syle count is 2." name="Style\Style.tests total syle count is 2." time="0.0189" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="throws with invalid html color." name="Style\Style.throws with invalid html color." time="0.0226" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="throws with invalid html background color." name="Style\Style.throws with invalid html background color." time="0.0236" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="tests valid html color code" name="Style\Style.tests valid html color code" time="0.0295" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="tests invalid length html color code" name="Style\Style.tests invalid length html color code" time="0.02" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="tests invalid html color code" name="Style\Style.tests invalid html color code" time="0.0185" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Style\Test-PScriboStyleColor" executed="True" result="Success" success="True" time="0.0938" asserts="0" description="Style\Test-PScriboStyleColor">
        <results>
          <test-case description="tests valid html color code." name="Style\Test-PScriboStyleColor.tests valid html color code." time="0.055" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="tests invalid length html color code." name="Style\Test-PScriboStyleColor.tests invalid length html color code." time="0.0176" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="tests invalid html color code." name="Style\Test-PScriboStyleColor.tests invalid html color code." time="0.0212" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Style\Set-PScriboStyle" executed="True" result="Success" success="True" time="0.2852" asserts="0" description="Style\Set-PScriboStyle">
        <results>
          <test-case description="sets row style by reference." name="Style\Set-PScriboStyle.sets row style by reference." time="0.1008" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets row style by pipeline." name="Style\Set-PScriboStyle.sets row style by pipeline." time="0.031" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets cell style on a single property by reference." name="Style\Set-PScriboStyle.sets cell style on a single property by reference." time="0.0553" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets cell style on a single property by pipeline." name="Style\Set-PScriboStyle.sets cell style on a single property by pipeline." time="0.0308" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets cell style on a multiple properties by reference." name="Style\Set-PScriboStyle.sets cell style on a multiple properties by reference." time="0.0351" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets cell style on a multiple properties by pipeline." name="Style\Set-PScriboStyle.sets cell style on a multiple properties by pipeline." time="0.0322" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Table\New-PScriboTableRow" executed="True" result="Success" success="True" time="0.445" asserts="0" description="Table\New-PScriboTableRow">
        <results>
          <test-case description="returns a PSCustomObject." name="Table\New-PScriboTableRow.returns a PSCustomObject." time="0.1565" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a row by a single named -Properties parameter." name="Table\New-PScriboTableRow.creates a row by a single named -Properties parameter." time="0.0198" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a row by named -Properties." name="Table\New-PScriboTableRow.creates a row by named -Properties." time="0.0265" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a row by named -Properties and -Headers parameters." name="Table\New-PScriboTableRow.creates a row by named -Properties and -Headers parameters." time="0.0276" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="returns a PSCustomObject." name="Table\New-PScriboTableRow.returns a PSCustomObject." time="0.0492" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table row by a single named -Properties parameter." name="Table\New-PScriboTableRow.creates a table row by a single named -Properties parameter." time="0.0221" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table row by named -Properties." name="Table\New-PScriboTableRow.creates a table row by named -Properties." time="0.0225" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table row by named -Properties and -Headers parameters." name="Table\New-PScriboTableRow.creates a table row by named -Properties and -Headers parameters." time="0.03" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="returns a PSCustomObject object." name="Table\New-PScriboTableRow.returns a PSCustomObject object." time="0.0421" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table row without spaces." name="Table\New-PScriboTableRow.creates a table row without spaces." time="0.0259" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table row with spaces." name="Table\New-PScriboTableRow.creates a table row with spaces." time="0.0228" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Table\Table" executed="True" result="Success" success="True" time="1.3187" asserts="0" description="Table\Table">
        <results>
          <test-case description="returns a PSCustomObject object." name="Table\Table.returns a PSCustomObject object." time="0.1215" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a PScribo.Table type." name="Table\Table.creates a PScribo.Table type." time="0.0278" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table without a name parameter." name="Table\Table.creates a table without a name parameter." time="0.031" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="defaults to table style &quot;TableDefault&quot;." name="Table\Table.defaults to table style &quot;TableDefault&quot;." time="0.0268" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table with -List parameter." name="Table\Table.creates a table with -List parameter." time="0.0295" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table by named -Name parameter." name="Table\Table.creates a table by named -Name parameter." time="0.0293" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table by named -Name parameter with a space." name="Table\Table.creates a table by named -Name parameter with a space." time="0.0277" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table by named -Columns parameters." name="Table\Table.creates a table by named -Columns parameters." time="0.0262" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table by named -Columns and -Headers parameters." name="Table\Table.creates a table by named -Columns and -Headers parameters." time="0.0266" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table by mismatched named -Headers and -Columns parameters." name="Table\Table.creates a table by mismatched named -Headers and -Columns parameters." time="0.0267" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table by named -Columns, -Headers and -Style parameters." name="Table\Table.creates a table by named -Columns, -Headers and -Style parameters." time="0.0279" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="warns with more than 2 columns with named -List parameter." name="Table\Table.warns with more than 2 columns with named -List parameter." time="0.0298" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="warns with mismatching columns and column widths." name="Table\Table.warns with mismatching columns and column widths." time="0.029" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table with specified column widths." name="Table\Table.creates a table with specified column widths." time="0.0279" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table with embedded row style" name="Table\Table.creates a table with embedded row style" time="0.0445" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table with embedded cell style" name="Table\Table.creates a table with embedded cell style" time="0.0458" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="returns a PSCustomObject object." name="Table\Table.returns a PSCustomObject object." time="0.0501" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a PScribo.Table type." name="Table\Table.creates a PScribo.Table type." time="0.0219" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table without a name parameter." name="Table\Table.creates a table without a name parameter." time="0.0271" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="defaults to table style &quot;TableDefault&quot;." name="Table\Table.defaults to table style &quot;TableDefault&quot;." time="0.0209" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table with -List parameter." name="Table\Table.creates a table with -List parameter." time="0.0246" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table by named -Name parameter." name="Table\Table.creates a table by named -Name parameter." time="0.0259" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table by named -Name parameter with a space." name="Table\Table.creates a table by named -Name parameter with a space." time="0.0237" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table by named -Columns parameters." name="Table\Table.creates a table by named -Columns parameters." time="0.0277" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table by named -Columns and -Headers parameters." name="Table\Table.creates a table by named -Columns and -Headers parameters." time="0.0251" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table by named -Columns, -Headers and -Style parameters." name="Table\Table.creates a table by named -Columns, -Headers and -Style parameters." time="0.0288" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table by mismatched named -Headers and -Columns parameters." name="Table\Table.creates a table by mismatched named -Headers and -Columns parameters." time="0.0212" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="warns with more than 2 columns with named -List parameter." name="Table\Table.warns with more than 2 columns with named -List parameter." time="0.0268" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table with specified column widths." name="Table\Table.creates a table with specified column widths." time="0.0263" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table with embedded row style" name="Table\Table.creates a table with embedded row style" time="0.0257" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table with embedded cell style" name="Table\Table.creates a table with embedded cell style" time="0.0261" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table by positional -Name parameter." name="Table\Table.creates a table by positional -Name parameter." time="0.0608" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table by positional -Name parameter with a space." name="Table\Table.creates a table by positional -Name parameter with a space." time="0.0321" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table by positional -Name and -Columns parameters." name="Table\Table.creates a table by positional -Name and -Columns parameters." time="0.0259" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table by positional -Name, -Columns and -Headers parameters." name="Table\Table.creates a table by positional -Name, -Columns and -Headers parameters." time="0.028" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table by positional -Name, -Columns, -Headers and -Style parameters." name="Table\Table.creates a table by positional -Name, -Columns, -Headers and -Style parameters." time="0.031" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table by positional -Name parameter." name="Table\Table.creates a table by positional -Name parameter." time="0.0522" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table by positional -Name parameter with a space." name="Table\Table.creates a table by positional -Name parameter with a space." time="0.0235" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table by positional -Name and -Columns parameters." name="Table\Table.creates a table by positional -Name and -Columns parameters." time="0.0296" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table by positional -Name, -Columns and -Headers parameters." name="Table\Table.creates a table by positional -Name, -Columns and -Headers parameters." time="0.0273" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a table by positional -Name, -Columns, -Headers and -Style parameters." name="Table\Table.creates a table by positional -Name, -Columns, -Headers and -Style parameters." time="0.0284" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="TableStyle\TableStyle" executed="True" result="Success" success="True" time="0.7371" asserts="0" description="TableStyle\TableStyle">
        <results>
          <test-case description="sets table style using named -Id, -HeaderStyle and -RowStyle parameters." name="TableStyle\TableStyle.sets table style using named -Id, -HeaderStyle and -RowStyle parameters." time="0.2216" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets table style using named -Id, -HeaderStyle, -RowStyle and -AlternateRowStyle parameters." name="TableStyle\TableStyle.sets table style using named -Id, -HeaderStyle, -RowStyle and -AlternateRowStyle parameters." time="0.0263" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="defaults table style to left alignment." name="TableStyle\TableStyle.defaults table style to left alignment." time="0.0236" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets table style alignment to center by named -Align parameter." name="TableStyle\TableStyle.sets table style alignment to center by named -Align parameter." time="0.0215" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets table style alignment to right by named -Align parameter." name="TableStyle\TableStyle.sets table style alignment to right by named -Align parameter." time="0.0244" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="defaults table style padding to 1.0pt, 4.0pt, 1.0pt and 4.0pt" name="TableStyle\TableStyle.defaults table style padding to 1.0pt, 4.0pt, 1.0pt and 4.0pt" time="0.0305" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets table style padding to 2.0pt, 5.0pt, 1.0pt and 5.0pt" name="TableStyle\TableStyle.sets table style padding to 2.0pt, 5.0pt, 1.0pt and 5.0pt" time="0.0282" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="defaults table style border to none." name="TableStyle\TableStyle.defaults table style border to none." time="0.0251" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets table style border to 2pt by named -BorderWidth parameter." name="TableStyle\TableStyle.sets table style border to 2pt by named -BorderWidth parameter." time="0.0297" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets table style border to 0px by named -BorderWidth parameter." name="TableStyle\TableStyle.sets table style border to 0px by named -BorderWidth parameter." time="0.0308" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets Normal table style by named -Normal parameter." name="TableStyle\TableStyle.sets Normal table style by named -Normal parameter." time="0.0235" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="throws with invalid named -HeaderStyle parameter." name="TableStyle\TableStyle.throws with invalid named -HeaderStyle parameter." time="0.0266" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="throws with invalid named -RowStyle parameter." name="TableStyle\TableStyle.throws with invalid named -RowStyle parameter." time="0.0283" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="throws with invalid named -AlternateRowStyle parameter." name="TableStyle\TableStyle.throws with invalid named -AlternateRowStyle parameter." time="0.021" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="throws with invalid named -BorderColor parameter." name="TableStyle\TableStyle.throws with invalid named -BorderColor parameter." time="0.0252" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets table style using positional -Id, -HeaderStyle and -RowStyle parameters." name="TableStyle\TableStyle.sets table style using positional -Id, -HeaderStyle and -RowStyle parameters." time="0.0525" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="sets table style using positional -Id, -HeaderStyle, -RowStyle and -AlternateRowStyle parameters." name="TableStyle\TableStyle.sets table style using positional -Id, -HeaderStyle, -RowStyle and -AlternateRowStyle parameters." time="0.0247" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="throws with invalid positional -HeaderStyle parameter." name="TableStyle\TableStyle.throws with invalid positional -HeaderStyle parameter." time="0.0202" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="throws with invalid positional -RowStyle parameter." name="TableStyle\TableStyle.throws with invalid positional -RowStyle parameter." time="0.0266" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="throws with invalid positional -AlternateRowStyle parameter." name="TableStyle\TableStyle.throws with invalid positional -AlternateRowStyle parameter." time="0.027" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="TOC\TOC" executed="True" result="Success" success="True" time="0.3234" asserts="0" description="TOC\TOC">
        <results>
          <test-case description="returns a PSCustomObject object." name="TOC\TOC.returns a PSCustomObject object." time="0.1996" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a TOC by named -Name parameter." name="TOC\TOC.creates a TOC by named -Name parameter." time="0.022" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a TOC by named -Name parameter with enabled -ForceUppercaseSection option." name="TOC\TOC.creates a TOC by named -Name parameter with enabled -ForceUppercaseSection option." time="0.0262" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a TOC by named -Name parameter." name="TOC\TOC.creates a TOC by named -Name parameter." time="0.0475" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="creates a TOC by named -Name parameter with enabled -ForceUppercaseSection option." name="TOC\TOC.creates a TOC by named -Name parameter with enabled -ForceUppercaseSection option." time="0.0281" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>